# docker-compose.yml
services:
  # PostgreSQL Database with pgvector support
  postgres:
    image: pgvector/pgvector:pg14
    restart: always
    environment:
      - POSTGRES_USER=heartwood_user
      - POSTGRES_PASSWORD=heartwood_password
      - POSTGRES_DB=heartwood_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  # Web API Server
  web-api:
    build:
      context: ./web-api
    ports:
      - '3000:3000' # Expose API on port 3000
    volumes:
      - ./web-api:/usr/src/app
      - /usr/src/app/node_modules # Prevents local node_modules from overwriting container's
      - ./db/agents:/usr/src/app/agents
    depends_on:
      - postgres
      - redis

  # Game Server (Colyseus)
  game-server:
    build:
      context: ./game-server
    ports:
      - '2567:2567' # Default Colyseus port
    volumes:
      - ./game-server:/usr/src/app
      - /usr/src/app/node_modules # Prevents local node_modules from overwriting container's
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres

  # Client (Phaser)
  client:
    build:
      context: ./client
    ports:
      - '5173:5173' # Default Vite port
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules # Prevents local node_modules from overwriting container's


volumes:
  postgres_data:
  redis_data:
